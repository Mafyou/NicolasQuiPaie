@page "/create-proposal"
@using NicolasQuiPaieWeb.Data.DTOs
@inject ProposalService ProposalService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@attribute [Authorize]

<PageTitle>Nouvelle Proposition - Nicolas Qui Paie</PageTitle>

<div class="container py-4">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <h1 class="fw-bold">
                <i class="fas fa-plus-circle text-primary me-2"></i>
                Nouvelle Proposition
            </h1>
            <p class="text-muted">Soumettez votre proposition à la communauté Nicolas pour débat et vote</p>
        </div>
    </div>

    <!-- Form -->
    <div class="row">
        <div class="col-lg-8">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <EditForm Model="newProposal" OnValidSubmit="SubmitProposal">
                        <DataAnnotationsValidator />

                        <!-- Title -->
                        <div class="mb-4">
                            <label class="form-label fw-bold">
                                <i class="fas fa-heading me-1"></i>
                                Titre de la proposition *
                            </label>
                            <InputText @bind-Value="newProposal.Title" 
                                     class="form-control form-control-lg" 
                                     placeholder="Ex: Réduire la TVA sur les produits de première nécessité"
                                     maxlength="200" />
                            <ValidationMessage For="() => newProposal.Title" class="text-danger" />
                            <div class="form-text">
                                @(newProposal.Title?.Length ?? 0)/200 caractères
                            </div>
                        </div>

                        <!-- Category -->
                        <div class="mb-4">
                            <label class="form-label fw-bold">
                                <i class="fas fa-tags me-1"></i>
                                Catégorie *
                            </label>
                            <InputSelect @bind-Value="newProposal.CategoryId" class="form-select">
                                <option value="0">Sélectionnez une catégorie</option>
                                @foreach (var category in categories)
                                {
                                    <option value="@category.Id">
                                        @category.Name - @category.Description
                                    </option>
                                }
                            </InputSelect>
                            <ValidationMessage For="() => newProposal.CategoryId" class="text-danger" />
                        </div>

                        <!-- Description -->
                        <div class="mb-4">
                            <label class="form-label fw-bold">
                                <i class="fas fa-align-left me-1"></i>
                                Description détaillée *
                            </label>
                            <InputTextArea @bind-Value="newProposal.Description" 
                                         class="form-control" 
                                         rows="8"
                                         placeholder="Expliquez votre proposition en détail : contexte, objectifs, impacts attendus, etc."
                                         maxlength="2000" />
                            <ValidationMessage For="() => newProposal.Description" class="text-danger" />
                            <div class="form-text">
                                @(newProposal.Description?.Length ?? 0)/2000 caractères
                            </div>
                        </div>

                        <!-- Preview Section -->
                        @if (!string.IsNullOrWhiteSpace(newProposal.Title))
                        {
                            <div class="mb-4">
                                <h6 class="fw-bold">
                                    <i class="fas fa-eye me-1"></i>
                                    Aperçu
                                </h6>
                                <div class="card bg-light">
                                    <div class="card-body">
                                        <div class="d-flex align-items-center mb-2">
                                            @if (selectedCategory != null)
                                            {
                                                <span class="badge rounded-pill me-2" style="background-color: @selectedCategory.Color; color: white;">
                                                    <i class="@selectedCategory.IconClass me-1"></i>
                                                    @selectedCategory.Name
                                                </span>
                                            }
                                            <small class="text-muted">Maintenant</small>
                                        </div>
                                        <h5 class="fw-bold">@newProposal.Title</h5>
                                        <p class="text-muted">
                                            @if (!string.IsNullOrWhiteSpace(newProposal.Description))
                                            {
                                                @(newProposal.Description.Length > 150 ? newProposal.Description.Substring(0, 150) + "..." : newProposal.Description)
                                            }
                                        </p>
                                        <small class="text-muted">
                                            <i class="fas fa-user-circle me-1"></i>
                                            Par vous
                                        </small>
                                    </div>
                                </div>
                            </div>
                        }

                        <!-- Guidelines -->
                        <div class="alert alert-info mb-4">
                            <h6 class="alert-heading">
                                <i class="fas fa-lightbulb me-1"></i>
                                Conseils pour une bonne proposition
                            </h6>
                            <ul class="mb-0">
                                <li>Soyez précis et concret dans votre titre</li>
                                <li>Expliquez clairement le problème et votre solution</li>
                                <li>Mentionnez les impacts fiscaux ou budgétaires attendus</li>
                                <li>Restez respectueux et constructif</li>
                                <li>Vérifiez qu'une proposition similaire n'existe pas déjà</li>
                            </ul>
                        </div>

                        <!-- Submit Buttons -->
                        <div class="d-flex gap-3">
                            <button type="submit" 
                                    class="btn btn-primary btn-lg"
                                    disabled="@(isSubmitting || !IsFormValid())">
                                @if (isSubmitting)
                                {
                                    <span class="spinner-border spinner-border-sm me-2"></span>
                                }
                                <i class="fas fa-paper-plane me-2"></i>
                                Publier la Proposition
                            </button>
                            
                            <button type="button" 
                                    class="btn btn-outline-secondary btn-lg"
                                    @onclick="SaveDraft"
                                    disabled="@isSubmitting">
                                <i class="fas fa-save me-2"></i>
                                Sauvegarder le Brouillon
                            </button>
                            
                            <a href="/proposals" class="btn btn-outline-danger btn-lg">
                                <i class="fas fa-times me-2"></i>
                                Annuler
                            </a>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>

        <!-- Sidebar -->
        <div class="col-lg-4">
            <!-- Tips Card -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header bg-primary text-white">
                    <h6 class="mb-0">
                        <i class="fas fa-question-circle me-1"></i>
                        Aide
                    </h6>
                </div>
                <div class="card-body">
                    <h6>Comment bien formuler sa proposition ?</h6>
                    <ul class="small">
                        <li>Utilisez un titre clair et accrocheur</li>
                        <li>Commencez par expliquer le problème</li>
                        <li>Proposez une solution concrète</li>
                        <li>Estimez l'impact fiscal si possible</li>
                    </ul>
                    
                    <h6 class="mt-3">Exemples de bonnes propositions :</h6>
                    <ul class="small text-muted">
                        <li>"Supprimer la taxe d'habitation pour les retraités"</li>
                        <li>"Créer un crédit d'impôt pour l'achat de vélos électriques"</li>
                        <li>"Réduire les frais de notaire pour les primo-accédants"</li>
                    </ul>
                </div>
            </div>

            <!-- Recent Proposals -->
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-light">
                    <h6 class="mb-0">
                        <i class="fas fa-clock me-1"></i>
                        Propositions Récentes
                    </h6>
                </div>
                <div class="card-body">
                    @if (recentProposals?.Any() == true)
                    {
                        @foreach (var proposal in recentProposals)
                        {
                            <div class="mb-3 pb-3 border-bottom">
                                <a href="/proposal/@proposal.Id" class="text-decoration-none">
                                    <h6 class="mb-1">@proposal.Title</h6>
                                </a>
                                <div class="d-flex justify-content-between align-items-center">
                                    <small class="text-muted">@proposal.TotalVotes votes</small>
                                    <span class="badge" style="background-color: @proposal.CategoryColor; color: white;">
                                        @proposal.CategoryName
                                    </span>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-muted small">Aucune proposition récente</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private Proposal newProposal = new Proposal();
    private IEnumerable<Category> categories = new List<Category>();
    private IEnumerable<ProposalDto> recentProposals = new List<ProposalDto>();
    private bool isSubmitting = false;
    private Category? selectedCategory => categories.FirstOrDefault(c => c.Id == newProposal.CategoryId);

    protected override async Task OnInitializedAsync()
    {
        await LoadCategories();
        await LoadRecentProposals();
    }

    private async Task LoadCategories()
    {
        try
        {
            categories = await ProposalService.GetCategoriesAsync();
        }
        catch (Exception)
        {
            categories = new List<Category>();
        }
    }

    private async Task LoadRecentProposals()
    {
        try
        {
            recentProposals = await ProposalService.GetActiveProposalsAsync(0, 5);
        }
        catch (Exception)
        {
            recentProposals = new List<ProposalDto>();
        }
    }

    private bool IsFormValid()
    {
        return !string.IsNullOrWhiteSpace(newProposal.Title) &&
               !string.IsNullOrWhiteSpace(newProposal.Description) &&
               newProposal.CategoryId > 0;
    }

    private async Task SubmitProposal()
    {
        if (!IsFormValid()) return;

        isSubmitting = true;

        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var userId = authState.User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;

            if (string.IsNullOrEmpty(userId))
            {
                Navigation.NavigateTo("/Identity/Account/Login");
                return;
            }

            newProposal.CreatedById = userId;
            newProposal.Status = ProposalStatus.Active;

            var createdProposal = await ProposalService.CreateProposalAsync(newProposal);
            
            await JSRuntime.InvokeVoidAsync("alert", "Votre proposition a été publiée avec succès !");
            Navigation.NavigateTo($"/proposal/{createdProposal.Id}");
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Erreur lors de la publication : {ex.Message}");
        }
        finally
        {
            isSubmitting = false;
        }
    }

    private async Task SaveDraft()
    {
        // This would save as draft status
        await JSRuntime.InvokeVoidAsync("alert", "Fonctionnalité de brouillon à implémenter");
    }
}