@page "/register"
@inject IAuthenticationService AuthService
@inject NavigationManager Navigation

<PageTitle>Inscription - Nicolas Qui Paie</PageTitle>

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-5">
            <div class="card shadow-sm">
                <div class="card-body p-4">
                    <div class="text-center mb-4">
                        <h2 class="fw-bold text-primary">Rejoindre les Nicolas</h2>
                        <p class="text-muted">Créez votre compte citoyen</p>
                    </div>

                    <EditForm Model="registerRequest" OnValidSubmit="HandleRegister">
                        <DataAnnotationsValidator />
                        
                        <div class="mb-3">
                            <label for="email" class="form-label">Email</label>
                            <InputText id="email" class="form-control" @bind-Value="registerRequest.Email" />
                            <ValidationMessage For="() => registerRequest.Email" />
                        </div>

                        <div class="mb-3">
                            <label for="displayName" class="form-label">Nom d'affichage</label>
                            <InputText id="displayName" class="form-control" @bind-Value="registerRequest.DisplayName" />
                            <ValidationMessage For="() => registerRequest.DisplayName" />
                        </div>

                        <div class="mb-3">
                            <label for="password" class="form-label">Mot de passe</label>
                            <InputText id="password" type="password" class="form-control" @bind-Value="registerRequest.Password" />
                            <ValidationMessage For="() => registerRequest.Password" />
                        </div>

                        <div class="mb-3">
                            <label for="bio" class="form-label">Bio (optionnelle)</label>
                            <InputTextArea id="bio" class="form-control" rows="3" @bind-Value="registerRequest.Bio" />
                            <div class="form-text">Dites-nous en plus sur vous et vos motivations citoyennes</div>
                        </div>

                        @if (!string.IsNullOrEmpty(errorMessage))
                        {
                            <div class="alert alert-danger">
                                @errorMessage
                            </div>
                        }

                        <button type="submit" class="btn btn-primary w-100" disabled="@isRegistering">
                            @if (isRegistering)
                            {
                                <span class="spinner-border spinner-border-sm me-2"></span>
                            }
                            Créer mon compte
                        </button>
                    </EditForm>

                    <hr class="my-4">

                    <div class="text-center">
                        <p class="text-muted">Déjà un compte ?</p>
                        <a href="/login" class="btn btn-outline-primary">
                            Se connecter
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private RegisterRequestDto registerRequest = new();
    private string errorMessage = "";
    private bool isRegistering = false;

    private async Task HandleRegister()
    {
        isRegistering = true;
        errorMessage = "";

        try
        {
            var result = await AuthService.RegisterAsync(registerRequest);
            
            if (result.Success)
            {
                Navigation.NavigateTo("/");
            }
            else
            {
                errorMessage = string.Join(", ", result.Errors);
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Erreur d'inscription: {ex.Message}";
        }
        finally
        {
            isRegistering = false;
        }
    }
}